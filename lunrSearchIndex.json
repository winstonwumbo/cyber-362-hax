[{"id":"itemacc21c20-6a64-4edf-a1d1-8","title":"Welcome","created":1756409833,"location":"item-acc21c20-6a64-4edf-a1d1-81696c139528","description":"Welcome to the HAXsite for CYBER 362, Section 002! This course teaches fundamental data-driven cybersecurity analytics skills with Python, Splunk, and other tools. In particular, students will learn ","text":"welcome to the haxsite for cyber 362, section 002! this course teaches fundamental data-driven cybersecurity analytics skills with python, splunk, and other tools. in particular, students will learn how handle large quantities of \"dirty\" real-world data. visit here info, lab instructions, guides on tools like python vs code!\nscheduled lectures\nclass meetings occur twice per week tuesdays thursdays from 1:35 pm 2:50 pm. 002 is a remote, synchronous all zoom.\n\n\n\n\n\noffice hours\ndr. dave fuscodjf3@psu.eduby appointment\n\n\n\nguodong donggvd5289@psu.eduby appointment\n\n\n\nwinston whitewjw5326@psu.edutues/thurs 5:00 6:00 or by appointment"},{"id":"iteme3d19518-66d2-4c00-a11b-9","title":"Guides","created":1756415920,"location":"item-e3d19518-66d2-4c00-a11b-94970739034e","description":"Topics\n","text":"topics\ncli crash course\n\nwindows setup\n\nmacos setup"},{"id":"item2b8e35af-e79e-434b-9f18-c","title":"CLI Crash Course","created":1756418137,"location":"item-2b8e35af-e79e-434b-9f18-c55e2a22e4d0","description":"\n","text":"navigating the command line\nthe line interface (cli), or terminal, is a powerful, text-based environment for interacting with your computer. cli tools are extremely common in it industry across development, cybersecurity, and more. has remained core component of every major operating system decades. becoming familiar such will be an incredibly valuable, long-lasting skill. although you may not term cli, youve likely heard some following software (which all clis!):\nwindows: prompt, powershell\n\n\n\nmacos: terminal\n\n\n\nlinux: konsole, gnome console\n\n\n\n\nthe most action that you'll perform 1. moving between folders 2. listing folder contents.\n1. folders\nto move folders, use the&#160;cd command. this same available on system. cd short \"change directory.\" entering by itself (with no other text) automatically bring back to home (/home/&lt;username&gt; macos/linux, c:\\users\\&lt;username&gt; windows). can another pwd confirm where you're located. \"print working directory.\"\n$ represent separate lines terminal commands.\n$ cd\n\n$ pwd\n/home/exampleuser\nwhen specific location, relative path absolute path. path&#160;starts looking target from current folder. means don't need fill file (think as the&#160;folder sequence) above full sequence takes start hard drive (/&#160;on c: windows) targeted folder.\n$ ./documents \n$ pwd\n/home/exampleuser/documents\n\n$ documents /home/exampleuser/documents pwd\n/home/exampleuser/documents\nsometimes return location. go backwards without typing path, accepts characters (../) symbolize \"return up once.\"\n$ ../ pwd\n/home/exampleuser\n\n$ ../../ pwd\n/home\n2. contents\nto list contents, either ls macos/linux dir windows. \"list,\"&#160;while \"directory.\" certain emulate windows (git bash example), if desired. these commands both provide simple visible files subfolders at location.\n$ \ndesktop/  downloads/ pictures/ videos/\ndocuments/ music/ public/\n\n$ \n volume c label.\n serial number a1b2-c3d4\n\n directory c:\\users\\exampleuser\n\n09/02/2025 04:50 am .\n09/02/2025 ..\n08/29/2025 08:30 desktop\n09/01/2025 02:00 pm documents\n09/02/2025 09:30 downloads\n08/29/2025 pictures\n08/29/2025 public\n08/29/2025 templates\n08/29/2025 videos\n 0 file(s) bytes\n 9 dir(s) 400,000,000,000 bytes free\nsometimes view hidden find detailed information like size. achieved something called flag. many allow pass special options change behaviors.&#160;\nfor command, correct would -lsa. /a /q. each makes request more advanced output.\n$ -lsa\ntotal 52\n drwx------. 1 exampleuser 596 aug 29 13:25 ./\n drwxr-xr-x. root 14 jun 21 23:39 ../\n20 -rw-------. 18542 12:44 .bash_history\n 4 -rw-r--r--. 18 20 08:40 .bash_logout\n 144 .bash_profile\n 617 jul 3 08:14 .bashrc\n 738 .cache/\n 802 .config/\n 13:06 desktop/\n 6788 12:35 documents/\n\n$ /q /a\n nt authority\\system junction desktop-abc123\\exampleuser appdata\n08/29/2025 pictures\n 7 free"},{"id":"item92d0d9c7-6396-4184-8e40-a","title":"Windows Setup","created":1756418243,"location":"item-92d0d9c7-6396-4184-8e40-aaada5a7d7f3","description":"\nHeading\n","text":"please review the following documentation for installing and configuring python, anaconda, vs code on your windows 10/11 device.\ninstall python\nvisit official python foundation website: python.org\n\n\n\n\n\n\n\n\n\n\n\n\nselect&#160;download installer (64-bit)\n\n\n\n\n\n\n\n\n\n\n\n\nselect&#160;python-3.13.7-amd64.exe from your&#160;downloads folder in file explorer\n\n\n\n\n\n\n\n\nimportant: select checkbox add python.exe to path, this allows terminal use standard&#160;python command\n\n\n\n\n\n\n\n\nselect install now\n\n\n\n\n\n\n\n\nopen either command prompt&#160;or powershell start menu\n\n\n\n\n\n\n\n\ntest by entering&#160;python --version\n\n\n\n\n\n\n\n\nif version number appears, then has been successfully installed!\n\n\n\n\n\n\n\n\n\n\n\n\n\ninstall conda\nvisit anaconda anaconda.com, skip registration\n\n\n\n\n\n\n\nselect 64-bit graphical under - 3.13\n\n\n\n\n\n\n\nselect&#160;miniconda3-latest-windows-x86_64.exe explorer\n\n\n\n\n\n\n\nselect just me (recommended) during installation type step\n\n\n\n\n\n\ncomplete remaining miniconda steps with default options\n\n\n\n\n\n\nopen prompt menu\n\n\n\n\n\n\ntest conda entering --version\n\n\n\n\n\nif installed!\n\n\n\n\n\n\n\n\n\ninstall configure code\nvisit visual studio code.visualstudio.com\n\n\n\n\n\n\n\nselect download windows\n\n\n\n\n\n\n\nselect vscodeusersetup-x64-1.103.2.exe downloads explorer\n\n\n\n\nimportant: \"open code\" action explorer directory context menu, you open folders directly explorer\n\n\n\ncomplete setup options\n\n\nopen menu\n\n\nselect extensions icon left sidebar, search marketplace\n\n\ninstall extension pack\n\n\nsearch jupyter marketplace, pack\n\n\n\n\n\n\ntest notebooks\nopen run&#160;as administrator option\n\n\nenter set-executionpolicy -scope currentuser remotesigned, environments\n\n\ncreate a cyber 362 store assignments (suggestion: documents/cyber362), folder\n\n\ncreate temporary named test.py&#160;in folder, enter text print(\"hello world!\")&#160;and save file\n\n\nselect run button\n\n\nif everything was installed successfully, hello world! message will appear terminal!\n\n\nnow lets test with&#160;conda! close current window, 3.13 (64-bit) button at bottom right of code\n\n\nselect base (3.13.5) environment, change interpreter&#160;that is using\n\n\nselect &gt; new terminal, verify that automatically runs&#160;conda activate base&#160;in window\n\n\nenter jupyter&#160;to all necessary packages using notebooks\n\n\nenter numpy matplotlib pandas additional future assignments\n\ncreate another test.ipynb, notebooks\n\n\nselect kernel side notebook, environments\n\n\nselect (python 3.13.5) env\n\n\nselect + button, world!\")&#160;into notebook cell\n\n\nif installed, below!"},{"id":"itemf93328fb-ebbb-4d3a-a9c7-4","title":"macOS Setup","created":1756418331,"location":"item-f93328fb-ebbb-4d3a-a9c7-4cd7d1616ae7","description":"\n","text":"please review the following documentation for installing and configuring python, anaconda, vs code on your macos device.\ninstall python\ndownload python from official site:&#160;python.org\n\n\n\n\nselect download 64-bit universal installer\n\n\n\n\nselect python-3.13.7-macos11.pkg downloads folder in finder\n\n\n\ncomplete install dialogue with default&#160;options\n\n\n\nvisit /applications/python 3.13/&#160;folder finder\n\n\n\nrun script file&#160;install certificates.command\n\n\n\nopen terminal\n\n\n\ntest by entering --version\n\n\n\nif version number appears, then has been successfully installed!\n\n\n\n\n\ninstall conda\nvisit anaconda website: anaconda.com, select skip registration\n\n\n\nselect (apple silicon) graphical installer &#160;or 64-bite (intel chip) under mac - 3.13, correct option depends macbook model\n\n\n\nselect miniconda3-latest-macosx-&lt;model type&gt;.pkg iin miniconda3 20205.06-1&#160;dialogue default options\n\n\n\nopen conda installed!\n\ninstall configure code\nvisit visual studio code.visualstudio.com\n\n\n\nvisit page, 11.0+\n\n\nselect vscode-darwin-universal.zip finder\n\n\nwhen zip file uncompresses, move code.app to applications folder\n\n\nopen double-clicking .app&#160;file, pin dock\n\n\nin code, open command palette (cmd+shift+p)\n\n\nenter shell command, command: code' path\n\n\nselect extensions icon left sidebar, search marketplace\n\n\ninstall extension pack\n\n\nsearch jupyter marketplace, pack\n\n\n\n\n\ntest notebooks\ncreate a cyber 362 store assignments finder (suggestion: documents/cyber362), this folder\n\ncreate temporary named test.py folder, enter text print(\"hello world!\") save file\n\nselect run button\n\nif everything was installed successfully, hello world! message will appear terminal!\n\nnow let's test conda! close current terminal window, 3.13 button at bottom right of code\n\nselect base (3.13.5) environment, change interpreter that is using\n\nselect &gt; new terminal, confirm activate appears window\n\nenter all necessary packages using notebooks\n\nenter numpy matplotlib pandas additional future assignments\ncreate another test.ipynb, notebooks\n\nselect kernel side notebook, environments\n\nselect (python 3.13.5) env\n\nselect + button, into notebook cell\n\nif installed, below!"},{"id":"itemcf87fc3b-5824-4c31-9521-2","title":"Linux Setup","created":1756418402,"location":"item-cf87fc3b-5824-4c31-9521-20e4417729c9","description":"\n","text":"heading"},{"id":"itemb8f813b3-0167-4e67-96b2-7","title":"About HAX","created":1756493119,"location":"item-b8f813b3-0167-4e67-96b2-7d06912541cd","description":"\n","text":"what is hax?\na radically simple approach to web authoring and content ownership. the goal of hax simple: help people create rich engaging without needing understand code.\nhax an open-source ecosystem built right here at penn state! with vanilla javascript litelement on component standard. idea online should always be accessible, even as third-party frameworks age diverge.\nthis thriving community led by project lead bryan ollendyke faculty fellow dr. david fusco. involves a variety fields including programming (full stack), ui/ux design, data sciences/ai, learning education technology development, more.\ngetting involved?\nhax looking for more bright minds, eager gain valuable skills contribute towards greater community. there are two main organizations state university park, lab&#160;and club.\nhax lab:&#160;a research group focused open accessible technologies. lab collaboration between ist, arts architecture other partners empower educational student success through ecosystem.&#160;the everyone, regardless background!\nhax club: student-led organization enthusiasts connected lab. club anyone interested in making mark open-source! weekly meetings thursdays at&#160;borland room 113!\n\nlearn hax.psu.edu&#160;and github.com/haxtheweb!"},{"id":"item8f8af739-552c-4153-a6e6-5","title":"Syllabus","created":1756493438,"location":"item-8f8af739-552c-4153-a6e6-572fbe4efce8","description":"\nHeading\n","text":"course description\nthis three-credit studio teaches fundamental data-driven cybersecurity analytics skills using programming introduced in other courses (e.g., ist 140).&#160;the will be divided into five modules.&#160;\nthe first module introduces analytics, as well recapping on some of the related security issues covered previous courses.&#160;the second gets students prepared for by gaining familiarity with data software tools&#160; and platforms such python, siem, soar, etc.&#160;\nthe third focuses understanding popular machine learning algorithms analytics.&#160;&#160;the fourth how to apply processes methods selected problems anomaly detection, network traffic analysis, protecting consumer web internet-facing apis, deploying systems production environments.&#160;\nthe team project is fifth module.&#160; this course, improve their knowledge tools, methodologies, processes; them real-world problems.\nobjectives\nthe purpose provide become more efficient exploring, visualizing recognizing patterns that represent threats addressing them. upon completion able to:\nunderstand justify needs applying and/or solving problems.understand analytical tools python tensorflow  solve problems.apply exploration visualization identify potential (such missing, outlier skewness data)prepare quality analytics.select, evaluate appropriate model real world etc.\nassignments grading\ncourse grading breakdown\n\n\t\n\t\t\n\t\t\tgrading category\n\t\t\tpercentage final grade\n\t\t\n\n\t\n\n\t\n\t\t\n\t\t\tlabs\n\t\t\t40%\n\t\t\n\n\t\t\n\t\t\tteam project\n\t\t\t20%\n\t\t\n\n\t\t\n\t\t\texams\n\t\t\t10%\n\t\t\n\n\t\t\n\t\t\thomework assignments\n\t\t\t15%\n\t\t\n\n\t\t\n\t\t\tquizzes\n\t\t\t15%\n\t\t\n\n\t\t\n\t\t\ttotal\n\t\t\t100%\n\t\t\n\n\t\n\n\n\nassignment submission policy\nhomework assignments quizzes are due sunday at 11:59 p.m. unless otherwise specified (see below). submit all homework via canvas.\nplease ensure your assignment looks professional, written professionally, communicates ideas clearly. writing should accurate diction, spelling, punctuation, grammar, sentence structure. points deducted not pay attention instructions.\nplease note following: \nassessments (labs, quizzes, assignments) 11:59pm (est) most cases but may subject change cases.\nthe projects deliverables dates provided class canvas.the exam take place towards end semester exact date time made available semester.students late penalty 25% deduction every 12 hours (up 2 days) highly discouraged\nafter days, no allowed\n\nwe anticipate there unforeseen circumstances or medical emergencies make it difficult turn time. email me advance if possible about situations. i grant you an extension 48 without penalty. request supporting documentation depending type circumstance emergency. urge use except when"}]